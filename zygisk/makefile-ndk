.DEFAULT_GOAL := all
RELEASE ?= false
CXX_RELEASE_FLAG := -O3 -flto -std=c++2b -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden -Wl,-O3,--lto-O3 -Wall
CXX_DEBUG_FLAG := -Og -std=c++2b -fno-exceptions -fno-rtti -fvisibility=hidden -fvisibility-inlines-hidden

.PHONY: all
all: zygisk-lib

.PHONY: clean
clean:
	rm -rf build/*
	cd rust && cargo clean

.PHONY: init-build
init-build:
	@[ -z $(ANDROID_NDK_HOME) ] && \
		echo "error: Could not find any NDK" && \
		echo "note: Set the environment ANDROID_NDK_HOME to your NDK installation's root directory" && \
		exit 1
	mkdir -p build/rust

.PHONY: zygisk-lib
zygisk-lib: init-build rust-lib
ifeq ($(RELEASE), true)
	$(ANDROID_NDK_HOME)\toolchains\llvm\prebuilt\linux-x86_64\bin\aarch64-linux-android33-clang++ $(CXX_RELEASE_FLAG) --shared src/hook.cpp \
		-Lbuild/rust \
		-L../prebuilt \
		-Irust/include \
		-nostdlib++ \
		-Wl,-lrust,-llog,-lc++,-lbinder_ndk \
		-o build/arm64-v8a.so
	@strip build/arm64-v8a.so
else
	$(ANDROID_NDK_HOME)\toolchains\llvm\prebuilt\linux-x86_64\bin\aarch64-linux-android33-clang++ $(CXX_DEBUG_FLAG) --shared src/hook.cpp \
		-Lbuild/rust \
		-L../prebuilt \
		-Irust/include \
		-nostdlib++ \
		-Wl,-lrust,-llog,-lc++,-lbinder_ndk \
		-o build/arm64-v8a.so
endif

.PHONY: rust-lib
rust-lib: init-build
ifeq ($(RELEASE), true)
	cd rust && cargo ndk -t arm64-v8a --platform=33 build -r
	cp -f rust/target/aarch64-linux-android/release/librust.a build/rust
else
	cd rust && cargo ndk -t arm64-v8a --platform=33 build -r
	cp -f rust/target/aarch64-linux-android/debug/librust.a build/rust
endif